% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tableauScrapeHelpers.R
\name{tableauScrape_scrapeData}
\alias{tableauScrape_scrapeData}
\alias{tableauScrape_listWorksheets}
\alias{tableauScrape_extractData}
\title{Tableau Scrape Helpers}
\usage{
tableauScrape_scrapeData(host_url, path)

tableauScrape_listWorksheets(data, print = FALSE)

tableauScrape_extractData(data, worksheetID)
}
\arguments{
\item{host_url}{The host url for a the tableau page you wish to scrape.}

\item{path}{The path for the host url for the tableau page you wish to
scrape.}

\item{data}{The tableau datasets extracted from the POST response. This is
the return from \code{tableauScrape_scrapeData()} and an input to
\code{tableauScrape_listWorksheets()} and
\code{tableauScrape_extractData()}}

\item{print}{Should the Worksheet ID's be printed when calling
\code{tableauScrape_listWorksheets()}. Default is FALSE}

\item{worksheetID}{The ID of the particular tableau dataset. These can be
identified with \code{tableauScrape_listWorksheets()}}
}
\description{
These functions, used in a series, can scrape data from specific
visualizations in Tableau dashboards.
}
\section{Origin of These Functions}{
 These functions are almost copy and paste
the same as methodology created by
\href{https://github.com/bertrandmartel}{@bertrandmartel} in their
\href{https://github.com/bertrandmartel/tableau-scraping}{tableau-scraping}
repository. I just cleaned them up a little and formatted them into the
functional pieces that we use most often. The credit goes to
\href{https://github.com/bertrandmartel}{@bertrandmartel} and these
functions are licensed under the MIT license Copyright (c) 2020 Bertrand
Martel.
}

\examples{
\dontrun{

#Define Host URL and path
host_url <- "https://results.mo.gov"
path <- "/t/COVID19/views/VaccinationsDashboard/Vaccinations"


#Scrape all the data
scrapedData <- tableauScrape_scrapeData(host_url = host_url, path = path) 

#Find out what data is available 
scrapedData_worksheets <- tableauScrape_listWorksheets(scrapedData)

#Pull out the dataset needed
extractedData <- tableauScrape_extractData(scrapedData, which(scrapedData_worksheets == 'County - Table'))
extractedData
}


}
